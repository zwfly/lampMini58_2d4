C51 COMPILER V9.52.0.0   APP_EEPROM                                                        11/20/2017 00:30:11 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE APP_EEPROM
OBJECT MODULE PLACED IN .\Out\Objects\app_eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_eeprom.c LARGE OPTIMIZE(8,SIZE) BROWSE INCDIR(..\Common\i
                    -nc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_eeprom.lst) 
                    -TABS(2) OBJECT(.\Out\Objects\app_eeprom.obj)

line level    source

   1          /*
   2           * app_eeprom.c
   3           *
   4           *  Created on: 2017Äê9ÔÂ8ÈÕ
   5           *      Author: fly
   6           */
   7          #include "app.h"
   8          #include <string.h>
   9          
  10          
  11          
  12          void app_eeprom_Init(void) {
  13   1      
  14   1      }
  15          
  16          void app_eeprom_get_dome_with_index(DOME_DEFAULT_T *dd, uint8_t index) {
  17   1        uint8_t i = 0;
  18   1        uint8_t n = 0;
  19   1        n = index;
  20   1      
  21   1        if (n >= DEFAULT_DOME_NUM) {
  22   2          n = 0;
  23   2        }
  24   1        for (i = 0; i < sizeof(DOME_DEFAULT_T); i++) {
  25   2          *((uint8_t*) dd + i) = read_APROM_BYTE(
  26   2          DOME_START_ADDR + index * sizeof(DOME_DEFAULT_T) + i);
*** WARNING C214 IN LINE 26 OF ..\App\src\app_eeprom.c: 'Argument': conversion: non-pointer to pointer
  27   2        }
  28   1      }
  29          void app_eeprom_erase(uint16_t addr) {
  30   1        erase_DATAFLASH(DOME_START_ADDR + addr);
  31   1      }
  32          void app_eeprom_write_byte(uint16_t addr, uint8_t d) {
  33   1        write_DATAFLASH_BYTE(DOME_START_ADDR + addr, d);
  34   1      }
  35          void app_eeprom_write_buf(uint16_t addr, uint8_t *pt, uint8_t len) {
  36   1        write_DATAFLASH_BUF(DOME_START_ADDR + addr, pt, len);
  37   1      }
  38          void app_eeprom_100ms_pro(void) {
  39   1      
  40   1      }
  41          
  42          static void app_eeprom_pro(void) {
  43   1      
  44   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    131    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.52.0.0   APP_EEPROM                                                        11/20/2017 00:30:11 PAGE 2   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
