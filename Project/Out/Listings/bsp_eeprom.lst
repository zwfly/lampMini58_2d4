C51 COMPILER V9.52.0.0   BSP_EEPROM                                                        11/20/2017 00:30:11 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE BSP_EEPROM
OBJECT MODULE PLACED IN .\Out\Objects\bsp_eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_eeprom.c LARGE OPTIMIZE(8,SIZE) BROWSE INCDIR(..\Common\i
                    -nc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_eeprom.lst) 
                    -TABS(2) OBJECT(.\Out\Objects\bsp_eeprom.obj)

line level    source

   1          /*
   2           * bsp_eeprom.c
   3           *
   4           *  Created on: 2017Äê9ÔÂ8ÈÕ
   5           *      Author: fly
   6           */
   7          #include "bsp.h"
   8          
   9          #if 0
              static UINT8 looptmp = 0, u8_addrl_r;
              static UINT8 code *cd_longaddr;
              static UINT8 xdata *xd_tmp;
              #else
  14          static UINT8 u8_addrl_r;
  15          //static UINT8 *cd_longaddr;
  16          //static UINT8 *xd_tmp;
  17          #endif
  18          
  19          void EEPROM_InitHard(void) {
  20   1      
  21   1      }
  22          
  23          /*********************************************************************************************************
             -********
  24           write_DATAFLASH_BYTE :
  25           user can copy all this subroutine into project, then call this function in main.
  26           *********************************************************************************************************
             -*********/
  27          void write_DATAFLASH_BYTE(UINT16 u16_addr, UINT8 u8_data) {
  28   1      #if 0
              //Check page start address
                u8_addrl_r = u16_addr;
                if (u8_addrl_r < 0x80) {
                  u8_addrl_r = 0;
                } else {
                  u8_addrl_r = 0x80;
                }
              //Save APROM data to XRAM
                xd_tmp = 0x80;
                cd_longaddr = (u16_addr & 0xff00) + u8_addrl_r;
                while (xd_tmp != 0x100) {
                  *xd_tmp = *cd_longaddr;
                  looptmp++;
                  xd_tmp++;
                  cd_longaddr++;
                }
              // Modify customer data in XRAM
                u8_addrl_r = u16_addr;
                if (u8_addrl_r < 0x80) {
                  xd_tmp = u8_addrl_r + 0x80;
                } else {
                  xd_tmp = u8_addrl_r + 0;
                }
C51 COMPILER V9.52.0.0   BSP_EEPROM                                                        11/20/2017 00:30:11 PAGE 2   

                *xd_tmp = u8_data;
              
              //Erase APROM DATAFLASH page
                IAPAL = u16_addr;
                IAPAH = u16_addr >> 8;
                IAPFD = 0xFF;
                set_IAPEN
                ;
                set_APUEN
                ;
                IAPCN = 0x22;
                set_IAPGO
                ;
              #endif
  66   1      //Save changed RAM data to APROM DATAFLASH
  67   1      
  68   1        IAPAL = u16_addr & 0xFF;
  69   1        IAPAH = (u16_addr >> 8) & 0xFF;
  70   1        set_IAPEN
  71   1        ;
  72   1        set_APUEN
  73   1        ;
  74   1        IAPCN = 0x21;
  75   1      
  76   1        IAPFD = u8_data;
  77   1        set_IAPGO
  78   1        ;
  79   1      //  IAPAL++;
  80   1      
  81   1        clr_APUEN
  82   1        ;
  83   1        clr_IAPEN
  84   1        ;
  85   1      }
  86          void erase_DATAFLASH(UINT16 u16_addr) {
  87   1        IAPAL = u16_addr;
  88   1        IAPAH = u16_addr >> 8;
  89   1        IAPFD = 0xFF;
  90   1        set_IAPEN
  91   1        ;
  92   1        set_APUEN
  93   1        ;
  94   1        IAPCN = 0x22;
  95   1        set_IAPGO
  96   1        ;
  97   1      }
  98          void write_DATAFLASH_BUF(UINT16 u16_addr, UINT8 *pt, uint8_t len) {
  99   1        uint16_t i = 0;
 100   1        IAPAL = u16_addr & 0xFF;
 101   1        IAPAH = (u16_addr >> 8) & 0xFF;
 102   1        set_IAPEN
 103   1        ;
 104   1        set_APUEN
 105   1        ;
 106   1        IAPCN = 0x21;
 107   1        for (i = 0; i < len; ++i) {
 108   2          IAPFD = *(pt + i);
 109   2          set_IAPGO
 110   2          ;
 111   2        }
 112   1      
 113   1        clr_APUEN
C51 COMPILER V9.52.0.0   BSP_EEPROM                                                        11/20/2017 00:30:11 PAGE 3   

 114   1        ;
 115   1        clr_IAPEN
 116   1        ;
 117   1      }
 118          
 119          //-------------------------------------------------------------------------
 120          uint8_t read_APROM_BYTE(uint16_t code *u16_addr) {
 121   1        uint8_t rdata;
 122   1        rdata = *u16_addr>>8;
 123   1        return rdata;
 124   1      }
 125          
 126          /*********************************************************************************************************
             -*********/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    348    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
