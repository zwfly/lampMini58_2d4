; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\app_crc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\app_crc.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini58Series\Include -I..\Bsp -I..\Bsp\inc -I..\utils\inc -I..\App\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=520 --omf_browse=.\obj\app_crc.crf ..\App\src\app_crc.c]
                          THUMB

                          AREA ||i.app_CalcCRC8||, CODE, READONLY, ALIGN=2

                  app_CalcCRC8 PROC
;;;11     
;;;12     uint8_t app_CalcCRC8(uint8_t *ptr, uint8_t len) {
000000  b570              PUSH     {r4-r6,lr}
;;;13     
;;;14     	crc = 0;
000002  2600              MOVS     r6,#0
000004  4b0f              LDR      r3,|L1.68|
;;;15     	while (len--) {
;;;16     		crc ^= *ptr++;
;;;17     		for (i = 0; i < 8; i++) {
;;;18     			if (crc & 0x01)
;;;19     				crc = (crc >> 1) ^ 0x8C;
000006  248c              MOVS     r4,#0x8c
000008  701e              STRB     r6,[r3,#0]            ;14
00000a  e013              B        |L1.52|
                  |L1.12|
00000c  7802              LDRB     r2,[r0,#0]            ;16
00000e  781d              LDRB     r5,[r3,#0]            ;16  ; crc
000010  406a              EORS     r2,r2,r5              ;16
000012  701a              STRB     r2,[r3,#0]            ;16
000014  705e              STRB     r6,[r3,#1]            ;17
000016  1c40              ADDS     r0,r0,#1              ;17
                  |L1.24|
000018  781a              LDRB     r2,[r3,#0]            ;18  ; crc
00001a  07d5              LSLS     r5,r2,#31             ;18
00001c  d002              BEQ      |L1.36|
00001e  0852              LSRS     r2,r2,#1
000020  4062              EORS     r2,r2,r4
000022  e000              B        |L1.38|
                  |L1.36|
;;;20     			else
;;;21     				crc >>= 1;
000024  0852              LSRS     r2,r2,#1
                  |L1.38|
000026  701a              STRB     r2,[r3,#0]
000028  785a              LDRB     r2,[r3,#1]            ;17  ; i
00002a  1c52              ADDS     r2,r2,#1              ;17
00002c  b2d2              UXTB     r2,r2                 ;17
00002e  705a              STRB     r2,[r3,#1]            ;17
000030  2a08              CMP      r2,#8                 ;17
000032  d3f1              BCC      |L1.24|
                  |L1.52|
000034  460a              MOV      r2,r1                 ;15
000036  1e49              SUBS     r1,r1,#1              ;15
000038  b2c9              UXTB     r1,r1                 ;15
00003a  2a00              CMP      r2,#0                 ;15
00003c  d1e6              BNE      |L1.12|
;;;22     		}
;;;23     	}
;;;24     	return crc;
00003e  7818              LDRB     r0,[r3,#0]  ; crc
;;;25     }
000040  bd70              POP      {r4-r6,pc}
;;;26     
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      ||.data||

                          AREA ||i.app_CalcCRC8_cycle||, CODE, READONLY, ALIGN=2

                  app_CalcCRC8_cycle PROC
;;;26     
;;;27     uint8_t app_CalcCRC8_cycle(uint8_t *ptr, uint16_t len, uint16_t pos,
000000  b5f0              PUSH     {r4-r7,lr}
;;;28     		uint16_t bufLen) {
;;;29     	crc = 0;
000002  4d13              LDR      r5,|L2.80|
000004  2400              MOVS     r4,#0
000006  702c              STRB     r4,[r5,#0]
000008  e01b              B        |L2.66|
                  |L2.10|
;;;30     	while (len--) {
;;;31     		crc ^= *ptr++;
00000a  7804              LDRB     r4,[r0,#0]
00000c  782e              LDRB     r6,[r5,#0]  ; crc
00000e  1c52              ADDS     r2,r2,#1
000010  4074              EORS     r4,r4,r6
;;;32     		pos++;
000012  b292              UXTH     r2,r2
000014  1c40              ADDS     r0,r0,#1
000016  702c              STRB     r4,[r5,#0]            ;31
;;;33     		if (pos >= bufLen) {
000018  429a              CMP      r2,r3
00001a  d301              BCC      |L2.32|
;;;34     			pos = 0;
00001c  2200              MOVS     r2,#0
;;;35     			ptr -= bufLen;
00001e  1ac0              SUBS     r0,r0,r3
                  |L2.32|
;;;36     		}
;;;37     		for (i = 0; i < 8; i++) {
000020  2400              MOVS     r4,#0
000022  706c              STRB     r4,[r5,#1]
;;;38     			if (crc & 0x01)
;;;39     				crc = (crc >> 1) ^ 0x8C;
000024  268c              MOVS     r6,#0x8c
                  |L2.38|
000026  782c              LDRB     r4,[r5,#0]            ;38  ; crc
000028  07e7              LSLS     r7,r4,#31             ;38
00002a  d002              BEQ      |L2.50|
00002c  0864              LSRS     r4,r4,#1
00002e  4074              EORS     r4,r4,r6
000030  e000              B        |L2.52|
                  |L2.50|
;;;40     			else
;;;41     				crc >>= 1;
000032  0864              LSRS     r4,r4,#1
                  |L2.52|
000034  702c              STRB     r4,[r5,#0]
000036  786c              LDRB     r4,[r5,#1]            ;37  ; i
000038  1c64              ADDS     r4,r4,#1              ;37
00003a  b2e4              UXTB     r4,r4                 ;37
00003c  706c              STRB     r4,[r5,#1]            ;37
00003e  2c08              CMP      r4,#8                 ;37
000040  d3f1              BCC      |L2.38|
                  |L2.66|
000042  460c              MOV      r4,r1                 ;30
000044  1e49              SUBS     r1,r1,#1              ;30
000046  b289              UXTH     r1,r1                 ;30
000048  2c00              CMP      r4,#0                 ;30
00004a  d1de              BNE      |L2.10|
;;;42     		}
;;;43     	}
;;;44     	return crc;
00004c  7828              LDRB     r0,[r5,#0]  ; crc
;;;45     }
00004e  bdf0              POP      {r4-r7,pc}
                          ENDP

                  |L2.80|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=0

                  ||crc||
000000  00                DCB      0x00
                  i
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\App\\src\\app_crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_app_crc_c_531a5672____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_app_crc_c_531a5672____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_app_crc_c_531a5672____REVSH|
#line 402
|__asm___9_app_crc_c_531a5672____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
