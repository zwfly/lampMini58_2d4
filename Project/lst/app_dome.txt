; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\app_dome.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\app_dome.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini58Series\Include -I..\Bsp -I..\Bsp\inc -I..\utils\inc -I..\App\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 --omf_browse=.\obj\app_dome.crf ..\App\src\app_dome.c]
                          THUMB

                          AREA ||i.app_color_blink_next||, CODE, READONLY, ALIGN=2

                  app_color_blink_next PROC
;;;59     }
;;;60     void app_color_blink_next(void) {
000000  b510              PUSH     {r4,lr}
;;;61     	color_blink_index++;
000002  490a              LDR      r1,|L1.44|
000004  7808              LDRB     r0,[r1,#0]  ; color_blink_index
000006  1c40              ADDS     r0,r0,#1
000008  b2c0              UXTB     r0,r0
00000a  7008              STRB     r0,[r1,#0]
;;;62     	if (color_blink_index >= COLOR_BLINK_NUMBER) {
00000c  280a              CMP      r0,#0xa
00000e  d301              BCC      |L1.20|
;;;63     		color_blink_index = 0;
000010  2000              MOVS     r0,#0
000012  7008              STRB     r0,[r1,#0]
                  |L1.20|
;;;64     	}
;;;65     	app_dome_rgb(color_blink_buffer[color_blink_index][0],
000014  b2c0              UXTB     r0,r0
000016  0041              LSLS     r1,r0,#1
000018  4b05              LDR      r3,|L1.48|
00001a  1840              ADDS     r0,r0,r1
00001c  18c1              ADDS     r1,r0,r3
00001e  788a              LDRB     r2,[r1,#2]
000020  7849              LDRB     r1,[r1,#1]
000022  5c18              LDRB     r0,[r3,r0]
000024  f7fffffe          BL       app_dome_rgb
;;;66     			color_blink_buffer[color_blink_index][1],
;;;67     			color_blink_buffer[color_blink_index][2]);
;;;68     }
000028  bd10              POP      {r4,pc}
;;;69     
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      ||.data||
                  |L1.48|
                          DCD      ||.constdata||

                          AREA ||i.app_color_blink_previous||, CODE, READONLY, ALIGN=2

                  app_color_blink_previous PROC
;;;49     }
;;;50     void app_color_blink_previous(void) {
000000  b510              PUSH     {r4,lr}
;;;51     	if (color_blink_index) {
000002  4909              LDR      r1,|L2.40|
000004  7808              LDRB     r0,[r1,#0]  ; color_blink_index
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L2.14|
00000a  1e40              SUBS     r0,r0,#1              ;50
;;;52     		color_blink_index--;
00000c  e000              B        |L2.16|
                  |L2.14|
;;;53     	} else {
;;;54     		color_blink_index = COLOR_BLINK_NUMBER - 1;
00000e  2009              MOVS     r0,#9
                  |L2.16|
000010  7008              STRB     r0,[r1,#0]
;;;55     	}
;;;56     	app_dome_rgb(color_blink_buffer[color_blink_index][0],
000012  b2c0              UXTB     r0,r0
000014  0041              LSLS     r1,r0,#1
000016  4b05              LDR      r3,|L2.44|
000018  1840              ADDS     r0,r0,r1
00001a  18c1              ADDS     r1,r0,r3
00001c  788a              LDRB     r2,[r1,#2]
00001e  7849              LDRB     r1,[r1,#1]
000020  5c18              LDRB     r0,[r3,r0]
000022  f7fffffe          BL       app_dome_rgb
;;;57     			color_blink_buffer[color_blink_index][1],
;;;58     			color_blink_buffer[color_blink_index][2]);
;;;59     }
000026  bd10              POP      {r4,pc}
;;;60     void app_color_blink_next(void) {
                          ENDP

                  |L2.40|
                          DCD      ||.data||
                  |L2.44|
                          DCD      ||.constdata||

                          AREA ||i.app_dome_Init||, CODE, READONLY, ALIGN=2

                  app_dome_Init PROC
;;;33     
;;;34     void app_dome_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;35     	color_blink_index = COLOR_BLINK_NUMBER - 1;
000002  490d              LDR      r1,|L3.56|
000004  2009              MOVS     r0,#9
000006  7008              STRB     r0,[r1,#0]
;;;36     //	g_tWork.status.bits.blinkEnable = 1;
;;;37     
;;;38     	memset((uint8_t *) &subDome_Assist, 0, sizeof(subDome_Assist));
000008  3108              ADDS     r1,r1,#8
00000a  2000              MOVS     r0,#0
00000c  6008              STR      r0,[r1,#0]
00000e  8088              STRH     r0,[r1,#4]
;;;39     
;;;40     	memset((uint8_t *) &domePro, 0, sizeof(domePro));
000010  3908              SUBS     r1,r1,#8
000012  7048              STRB     r0,[r1,#1]
;;;41     	memset((uint8_t *) &dome_blink, 0, sizeof(dome_blink));
000014  2172              MOVS     r1,#0x72
000016  4809              LDR      r0,|L3.60|
000018  f7fffffe          BL       __aeabi_memclr
;;;42     	memset((uint8_t *) &dome_running_param, 0, sizeof(dome_running_param));
00001c  4806              LDR      r0,|L3.56|
00001e  2108              MOVS     r1,#8
000020  300e              ADDS     r0,r0,#0xe
000022  f7fffffe          BL       __aeabi_memclr
;;;43     
;;;44     	dome_running_param.bright = 100;
000026  4804              LDR      r0,|L3.56|
000028  2164              MOVS     r1,#0x64
00002a  300e              ADDS     r0,r0,#0xe
00002c  7001              STRB     r1,[r0,#0]
;;;45     	dome_running_param.speed = 50;
00002e  2132              MOVS     r1,#0x32
000030  7041              STRB     r1,[r0,#1]
;;;46     //	app_dome_start(0, 0);
;;;47     	app_dome_stop_current();
000032  f7fffffe          BL       app_dome_stop_current
;;;48     
;;;49     }
000036  bd10              POP      {r4,pc}
;;;50     void app_color_blink_previous(void) {
                          ENDP

                  |L3.56|
                          DCD      ||.data||
                  |L3.60|
                          DCD      ||.bss||+0x17

                          AREA ||i.app_dome_get_current_Name||, CODE, READONLY, ALIGN=2

                  app_dome_get_current_Name PROC
;;;88     
;;;89     void app_dome_get_current_Name(char *name, uint8_t len) {
000000  b510              PUSH     {r4,lr}
;;;90     	if (len > sizeof(dome_blink.header.name)) {
000002  2908              CMP      r1,#8
000004  d803              BHI      |L4.14|
;;;91     		name = 0;
;;;92     		return;
;;;93     	}
;;;94     	memcpy((uint8_t *) name, (uint8_t *) dome_blink.header.name, len);
000006  460a              MOV      r2,r1
000008  4901              LDR      r1,|L4.16|
00000a  f7fffffe          BL       __aeabi_memcpy
                  |L4.14|
;;;95     }
00000e  bd10              POP      {r4,pc}
;;;96     void app_dome_start_current(void) {
                          ENDP

                  |L4.16|
                          DCD      ||.bss||+0x17

                          AREA ||i.app_dome_interrupter||, CODE, READONLY, ALIGN=2

                  app_dome_interrupter PROC
;;;235    
;;;236    void app_dome_interrupter(void) {
000000  b5f0              PUSH     {r4-r7,lr}
;;;237    
;;;238    #if 1
;;;239    
;;;240    //	if (g_tWork.status.bits.blinkEnable == 0) {
;;;241    //		return;
;;;242    //	}
;;;243    
;;;244    	if (subDome_Assist.stopTime) {
000002  49e2              LDR      r1,|L5.908|
000004  b085              SUB      sp,sp,#0x14           ;236
000006  7948              LDRB     r0,[r1,#5]  ; subDome_Assist
000008  2800              CMP      r0,#0
00000a  d003              BEQ      |L5.20|
00000c  1e40              SUBS     r0,r0,#1              ;236
;;;245    		subDome_Assist.stopTime--;
00000e  7148              STRB     r0,[r1,#5]
                  |L5.16|
;;;246    		return;
;;;247    	}
;;;248    
;;;249    	if ((subDome.repeate == 0) && (subDome.offtime == 0)) {
;;;250    		return;
;;;251    	}
;;;252    
;;;253    	switch (subDome.mode & 0x0F) {
;;;254    	case 0x03:  //shadow
;;;255    	{
;;;256    		subDome_Assist.msCnt++;
;;;257    
;;;258    		if (subDome.color1.R < subDome.color2.R) {
;;;259    			tmp = subDome.color1.R * 256
;;;260    					+ subDome_Assist.msCnt * 256
;;;261    							* abs(subDome.color2.R - subDome.color1.R)
;;;262    							/ subDome.speed;
;;;263    			tmp = subDome.bright * tmp / 100;
;;;264    		} else {
;;;265    			tmp = subDome.color1.R * 256
;;;266    					- subDome_Assist.msCnt * 256
;;;267    							* abs(subDome.color2.R - subDome.color1.R)
;;;268    							/ subDome.speed;
;;;269    			tmp = subDome.bright * tmp / 100;
;;;270    		}
;;;271    		dome_running_param.color.R = tmp & 0xFFFF;
;;;272    		//////
;;;273    		if (subDome.color1.G < subDome.color2.G) {
;;;274    			tmp = subDome.color1.G * 256
;;;275    					+ subDome_Assist.msCnt * 256
;;;276    							* abs(subDome.color2.G - subDome.color1.G)
;;;277    							/ subDome.speed;
;;;278    			tmp = subDome.bright * tmp / 100;
;;;279    //			Light_Green_set(tmp);
;;;280    		} else {
;;;281    			tmp = subDome.color1.G * 256
;;;282    					- subDome_Assist.msCnt * 256
;;;283    							* abs(subDome.color2.G - subDome.color1.G)
;;;284    							/ subDome.speed;
;;;285    			tmp = subDome.bright * tmp / 100;
;;;286    //			Light_Green_set(tmp);
;;;287    		}
;;;288    		dome_running_param.color.G = tmp & 0xFFFF;
;;;289    		//////
;;;290    		if (subDome.color1.B < subDome.color2.B) {
;;;291    			tmp = subDome.color1.B * 256
;;;292    					+ subDome_Assist.msCnt * 256
;;;293    							* abs(subDome.color2.B - subDome.color1.B)
;;;294    							/ subDome.speed;
;;;295    			tmp = subDome.bright * tmp / 100;
;;;296    //			Light_Blue_set(tmp);
;;;297    		} else {
;;;298    			tmp = subDome.color1.B * 256
;;;299    					- subDome_Assist.msCnt * 256
;;;300    							* abs(subDome.color2.B - subDome.color1.B)
;;;301    							/ subDome.speed;
;;;302    			tmp = subDome.bright * tmp / 100;
;;;303    //			Light_Blue_set(tmp);
;;;304    		}
;;;305    		dome_running_param.color.B = tmp & 0xFFFF;
;;;306    		Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
;;;307    				dome_running_param.color.B);
;;;308    
;;;309    		if (subDome_Assist.msCnt >= subDome.speed) {
;;;310    			subDome_Assist.msCnt = 0;
;;;311    #if 0
;;;312    			tmp_color = subDome.color2.R;
;;;313    			subDome.color2.R = subDome.color1.R;
;;;314    			subDome.color1.R = tmp_color;
;;;315    
;;;316    			tmp_color = subDome.color2.G;
;;;317    			subDome.color2.G = subDome.color1.G;
;;;318    			subDome.color1.G = tmp_color;
;;;319    
;;;320    			tmp_color = subDome.color2.B;
;;;321    			subDome.color2.B = subDome.color1.B;
;;;322    			subDome.color1.B = tmp_color;
;;;323    
;;;324    			if (subDome_Assist.switch_flag == 0) {
;;;325    				subDome_Assist.switch_flag = 1;
;;;326    
;;;327    			} else {
;;;328    				subDome_Assist.switch_flag = 0;
;;;329    
;;;330    				if (subDome.repeate) {
;;;331    					subDome.repeate--;
;;;332    				}
;;;333    			}
;;;334    #else
;;;335    
;;;336    			if (subDome.repeate) {
;;;337    				subDome.repeate--;
;;;338    			}
;;;339    
;;;340    #endif
;;;341    		}
;;;342    		if (subDome.repeate == 0) {
;;;343    //			Light_RGB_set(0, 0, 0);
;;;344    
;;;345    //			if (subDome.offtime) {
;;;346    //				subDome.offtime--;
;;;347    //			}
;;;348    //			if (subDome.offtime == 0) {
;;;349    			app_dome_subDome_pro(subDome.mode >> 4);
;;;350    //			}
;;;351    
;;;352    		}
;;;353    	}
;;;354    		break;
;;;355    	case 0x04:  //breath
;;;356    	{
;;;357    		if (subDome_Assist.switch_flag == 0) {
;;;358    			subDome_Assist.msCnt++;
;;;359    		} else {
;;;360    			if (subDome_Assist.msCnt) {
;;;361    				subDome_Assist.msCnt--;
;;;362    			}
;;;363    		}
;;;364    
;;;365    		tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.R / subDome.speed;
;;;366    		tmp = tmp * subDome.bright / 100;
;;;367    		dome_running_param.color.R = tmp & 0xFFFF;
;;;368    
;;;369    		tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.G / subDome.speed;
;;;370    		tmp = tmp * subDome.bright / 100;
;;;371    		dome_running_param.color.G = tmp & 0xFFFF;
;;;372    
;;;373    		tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.B / subDome.speed;
;;;374    		tmp = tmp * subDome.bright / 100;
;;;375    		dome_running_param.color.B = tmp & 0xFFFF;
;;;376    		Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
;;;377    				dome_running_param.color.B);
;;;378    
;;;379    		if ((subDome_Assist.msCnt >= subDome.speed)
;;;380    				|| (subDome_Assist.msCnt == 0)) {
;;;381    			if (subDome_Assist.switch_flag == 0) {
;;;382    				subDome_Assist.switch_flag = 1;
;;;383    			} else {
;;;384    				subDome_Assist.switch_flag = 0;
;;;385    				if (subDome.repeate) {
;;;386    					subDome.repeate--;
;;;387    				}
;;;388    			}
;;;389    		}
;;;390    		if (subDome.repeate == 0) {
;;;391    //			Light_RGB_set(0, 0, 0);
;;;392    //			if (subDome.offtime) {
;;;393    //				subDome.offtime--;
;;;394    //			}
;;;395    //			if (subDome.offtime == 0) {
;;;396    			app_dome_subDome_pro(subDome.mode >> 4);
;;;397    //			}
;;;398    		}
;;;399    	}
;;;400    		break;
;;;401    	case 0x05:  //blink flash
;;;402    	{
;;;403    		uint32_t tt = 0xFF;
;;;404    		if (subDome_Assist.msCnt == 0) {
;;;405    			tmp = tt * subDome.color1.R * subDome.bright / 100;
;;;406    			dome_running_param.color.R = tmp & 0xFFFF;
;;;407    
;;;408    			tmp = tt * subDome.color1.G * subDome.bright / 100;
;;;409    			dome_running_param.color.G = tmp & 0xFFFF;
;;;410    
;;;411    			tmp = tt * subDome.color1.B * subDome.bright / 100;
;;;412    			dome_running_param.color.B = tmp & 0xFFFF;
;;;413    			Light_RGB_set(dome_running_param.color.R,
;;;414    					dome_running_param.color.G, dome_running_param.color.B);
;;;415    		}
;;;416    		tmp = subDome.speed;
;;;417    		if (subDome_Assist.msCnt == tmp) {
;;;418    			tmp = tt * subDome.color2.R * subDome.bright / 100;
;;;419    			dome_running_param.color.R = tmp & 0xFFFF;
;;;420    
;;;421    			tmp = tt * subDome.color2.G * subDome.bright / 100;
;;;422    			dome_running_param.color.G = tmp & 0xFFFF;
;;;423    
;;;424    			tmp = tt * subDome.color2.B * subDome.bright / 100;
;;;425    			dome_running_param.color.B = tmp & 0xFFFF;
;;;426    			Light_RGB_set(dome_running_param.color.R,
;;;427    					dome_running_param.color.G, dome_running_param.color.B);
;;;428    		}
;;;429    		subDome_Assist.msCnt++;
;;;430    		tmp = 0;
;;;431    		tmp = tmp + subDome.speed + subDome.offtime;
;;;432    		if (subDome_Assist.msCnt >= tmp) {
;;;433    			subDome_Assist.msCnt = 0;
;;;434    			if (subDome.repeate) {
;;;435    				subDome.repeate--;
;;;436    			}
;;;437    		}
;;;438    		if (subDome.repeate == 0) {
;;;439    //			Light_RGB_set(0, 0, 0);
;;;440    //			if (subDome.offtime) {
;;;441    //				subDome.offtime--;
;;;442    //			}
;;;443    //			if (subDome.offtime == 0) {
;;;444    			app_dome_subDome_pro(subDome.mode >> 4);
;;;445    //			}
;;;446    		}
;;;447    	}
;;;448    		break;
;;;449    	default:
;;;450    
;;;451    		break;
;;;452    	}
;;;453    
;;;454    #endif
;;;455    }
000010  b005              ADD      sp,sp,#0x14
000012  bdf0              POP      {r4-r7,pc}
                  |L5.20|
000014  4dde              LDR      r5,|L5.912|
000016  79ea              LDRB     r2,[r5,#7]            ;249  ; subDome
000018  1ce8              ADDS     r0,r5,#3              ;249
00001a  9004              STR      r0,[sp,#0x10]         ;249
00001c  2a00              CMP      r2,#0                 ;249
00001e  d104              BNE      |L5.42|
000020  7a42              LDRB     r2,[r0,#9]            ;249  ; subDome
000022  7a03              LDRB     r3,[r0,#8]            ;249  ; subDome
000024  0210              LSLS     r0,r2,#8              ;249
000026  4318              ORRS     r0,r0,r3              ;249
000028  d0f2              BEQ      |L5.16|
                  |L5.42|
00002a  7828              LDRB     r0,[r5,#0]            ;253  ; subDome
00002c  4cd8              LDR      r4,|L5.912|
00002e  0700              LSLS     r0,r0,#28             ;253
000030  7862              LDRB     r2,[r4,#1]            ;258
000032  9203              STR      r2,[sp,#0xc]          ;273
000034  78a2              LDRB     r2,[r4,#2]            ;273
000036  9202              STR      r2,[sp,#8]            ;290
000038  7aa2              LDRB     r2,[r4,#0xa]          ;259
00003a  7a63              LDRB     r3,[r4,#9]            ;259
00003c  78e7              LDRB     r7,[r4,#3]            ;290
00003e  7a26              LDRB     r6,[r4,#8]            ;263
000040  0212              LSLS     r2,r2,#8              ;259
000042  431a              ORRS     r2,r2,r3              ;259
000044  0f00              LSRS     r0,r0,#28             ;253
000046  1c64              ADDS     r4,r4,#1              ;259
000048  9200              STR      r2,[sp,#0]            ;253
00004a  2803              CMP      r0,#3                 ;253
00004c  d00a              BEQ      |L5.100|
00004e  2804              CMP      r0,#4                 ;253
000050  d07e              BEQ      |L5.336|
000052  2805              CMP      r0,#5                 ;253
000054  d1dc              BNE      |L5.16|
000056  48cd              LDR      r0,|L5.908|
000058  1c40              ADDS     r0,r0,#1              ;404
00005a  f7fffffe          BL       __aeabi_uread4
00005e  2800              CMP      r0,#0                 ;404
000060  d077              BEQ      |L5.338|
000062  e147              B        |L5.756|
                  |L5.100|
000064  48c9              LDR      r0,|L5.908|
000066  1c40              ADDS     r0,r0,#1              ;256
000068  f7fffffe          BL       __aeabi_uread4
00006c  49c7              LDR      r1,|L5.908|
00006e  1c40              ADDS     r0,r0,#1              ;256
000070  1c49              ADDS     r1,r1,#1              ;256
000072  f7fffffe          BL       __aeabi_uwrite4
000076  9001              STR      r0,[sp,#4]            ;258
000078  48c5              LDR      r0,|L5.912|
00007a  49c5              LDR      r1,|L5.912|
00007c  7900              LDRB     r0,[r0,#4]            ;258  ; subDome
00007e  784b              LDRB     r3,[r1,#1]            ;258
000080  9d03              LDR      r5,[sp,#0xc]          ;259
000082  1ac1              SUBS     r1,r0,r3              ;259
000084  424a              RSBS     r2,r1,#0              ;259
000086  021b              LSLS     r3,r3,#8              ;259
000088  4285              CMP      r5,r0                 ;258
00008a  9801              LDR      r0,[sp,#4]            ;258
00008c  9303              STR      r3,[sp,#0xc]          ;258
00008e  d20a              BCS      |L5.166|
000090  2900              CMP      r1,#0                 ;259
000092  da00              BGE      |L5.150|
000094  4611              MOV      r1,r2                 ;259
                  |L5.150|
000096  4348              MULS     r0,r1,r0              ;259
000098  0200              LSLS     r0,r0,#8              ;259
00009a  9900              LDR      r1,[sp,#0]            ;259
00009c  f7fffffe          BL       __aeabi_uidivmod
0000a0  9903              LDR      r1,[sp,#0xc]          ;259
0000a2  1841              ADDS     r1,r0,r1              ;259
0000a4  e009              B        |L5.186|
                  |L5.166|
0000a6  2900              CMP      r1,#0                 ;265
0000a8  da00              BGE      |L5.172|
0000aa  4611              MOV      r1,r2                 ;265
                  |L5.172|
0000ac  4348              MULS     r0,r1,r0              ;265
0000ae  0200              LSLS     r0,r0,#8              ;265
0000b0  9900              LDR      r1,[sp,#0]            ;265
0000b2  f7fffffe          BL       __aeabi_uidivmod
0000b6  9903              LDR      r1,[sp,#0xc]          ;265
0000b8  1a09              SUBS     r1,r1,r0              ;265
                  |L5.186|
0000ba  4db4              LDR      r5,|L5.908|
0000bc  4630              MOV      r0,r6                 ;265
0000be  4348              MULS     r0,r1,r0              ;269
0000c0  3d08              SUBS     r5,r5,#8              ;265
0000c2  2164              MOVS     r1,#0x64              ;269
0000c4  f7fffffe          BL       __aeabi_uidivmod
0000c8  6068              STR      r0,[r5,#4]            ;271  ; tmp
0000ca  4628              MOV      r0,r5                 ;271
0000cc  8880              LDRH     r0,[r0,#4]            ;271  ; tmp
0000ce  4629              MOV      r1,r5                 ;271
0000d0  b280              UXTH     r0,r0                 ;271
0000d2  310e              ADDS     r1,r1,#0xe            ;271
0000d4  8048              STRH     r0,[r1,#2]            ;271
0000d6  9003              STR      r0,[sp,#0xc]          ;273
0000d8  48ad              LDR      r0,|L5.912|
0000da  49ad              LDR      r1,|L5.912|
0000dc  7940              LDRB     r0,[r0,#5]            ;273  ; subDome
0000de  788d              LDRB     r5,[r1,#2]            ;273
0000e0  9b02              LDR      r3,[sp,#8]            ;273
0000e2  1b41              SUBS     r1,r0,r5              ;274
0000e4  424a              RSBS     r2,r1,#0              ;274
0000e6  022d              LSLS     r5,r5,#8              ;274
0000e8  4283              CMP      r3,r0                 ;273
0000ea  9801              LDR      r0,[sp,#4]            ;273
0000ec  d209              BCS      |L5.258|
0000ee  2900              CMP      r1,#0                 ;274
0000f0  da00              BGE      |L5.244|
0000f2  4611              MOV      r1,r2                 ;274
                  |L5.244|
0000f4  4348              MULS     r0,r1,r0              ;274
0000f6  0200              LSLS     r0,r0,#8              ;274
0000f8  9900              LDR      r1,[sp,#0]            ;274
0000fa  f7fffffe          BL       __aeabi_uidivmod
0000fe  1941              ADDS     r1,r0,r5              ;274
000100  e008              B        |L5.276|
                  |L5.258|
000102  2900              CMP      r1,#0                 ;281
000104  da00              BGE      |L5.264|
000106  4611              MOV      r1,r2                 ;281
                  |L5.264|
000108  4348              MULS     r0,r1,r0              ;281
00010a  0200              LSLS     r0,r0,#8              ;281
00010c  9900              LDR      r1,[sp,#0]            ;281
00010e  f7fffffe          BL       __aeabi_uidivmod
000112  1a29              SUBS     r1,r5,r0              ;281
                  |L5.276|
000114  4d9d              LDR      r5,|L5.908|
000116  4630              MOV      r0,r6                 ;281
000118  4348              MULS     r0,r1,r0              ;285
00011a  3d08              SUBS     r5,r5,#8              ;281
00011c  2164              MOVS     r1,#0x64              ;285
00011e  f7fffffe          BL       __aeabi_uidivmod
000122  6068              STR      r0,[r5,#4]            ;288  ; tmp
000124  4628              MOV      r0,r5                 ;288
000126  8880              LDRH     r0,[r0,#4]            ;288  ; tmp
000128  4629              MOV      r1,r5                 ;288
00012a  b280              UXTH     r0,r0                 ;288
00012c  310e              ADDS     r1,r1,#0xe            ;288
00012e  8088              STRH     r0,[r1,#4]            ;288
000130  4d97              LDR      r5,|L5.912|
000132  9002              STR      r0,[sp,#8]            ;290
000134  463b              MOV      r3,r7                 ;290
000136  4629              MOV      r1,r5                 ;249
000138  79a8              LDRB     r0,[r5,#6]            ;290  ; subDome
00013a  78cf              LDRB     r7,[r1,#3]            ;290
00013c  1bc1              SUBS     r1,r0,r7              ;291
00013e  424a              RSBS     r2,r1,#0              ;291
000140  023f              LSLS     r7,r7,#8              ;291
000142  4283              CMP      r3,r0                 ;290
000144  9801              LDR      r0,[sp,#4]            ;290
000146  d20c              BCS      |L5.354|
000148  2900              CMP      r1,#0                 ;291
00014a  da00              BGE      |L5.334|
00014c  4611              MOV      r1,r2                 ;291
                  |L5.334|
00014e  e001              B        |L5.340|
                  |L5.336|
000150  e039              B        |L5.454|
                  |L5.338|
000152  e0a6              B        |L5.674|
                  |L5.340|
000154  4348              MULS     r0,r1,r0              ;291
000156  0200              LSLS     r0,r0,#8              ;291
000158  9900              LDR      r1,[sp,#0]            ;291
00015a  f7fffffe          BL       __aeabi_uidivmod
00015e  19c1              ADDS     r1,r0,r7              ;291
000160  e008              B        |L5.372|
                  |L5.354|
000162  2900              CMP      r1,#0                 ;298
000164  da00              BGE      |L5.360|
000166  4611              MOV      r1,r2                 ;298
                  |L5.360|
000168  4348              MULS     r0,r1,r0              ;298
00016a  0200              LSLS     r0,r0,#8              ;298
00016c  9900              LDR      r1,[sp,#0]            ;298
00016e  f7fffffe          BL       __aeabi_uidivmod
000172  1a39              SUBS     r1,r7,r0              ;298
                  |L5.372|
000174  4f85              LDR      r7,|L5.908|
000176  4630              MOV      r0,r6                 ;298
000178  4348              MULS     r0,r1,r0              ;302
00017a  3f08              SUBS     r7,r7,#8              ;298
00017c  2164              MOVS     r1,#0x64              ;302
00017e  f7fffffe          BL       __aeabi_uidivmod
000182  6078              STR      r0,[r7,#4]            ;305  ; tmp
000184  4638              MOV      r0,r7                 ;305
000186  8880              LDRH     r0,[r0,#4]            ;305  ; tmp
000188  b282              UXTH     r2,r0                 ;305
00018a  4638              MOV      r0,r7                 ;305
00018c  300e              ADDS     r0,r0,#0xe            ;305
00018e  80c2              STRH     r2,[r0,#6]            ;305
000190  9902              LDR      r1,[sp,#8]            ;306
000192  9803              LDR      r0,[sp,#0xc]          ;306
000194  f7fffffe          BL       Light_RGB_set
000198  4e7c              LDR      r6,|L5.908|
00019a  1c70              ADDS     r0,r6,#1              ;309
00019c  f7fffffe          BL       __aeabi_uread4
0001a0  7a61              LDRB     r1,[r4,#9]            ;309  ; subDome
0001a2  7a22              LDRB     r2,[r4,#8]            ;309  ; subDome
0001a4  0209              LSLS     r1,r1,#8              ;309
0001a6  4311              ORRS     r1,r1,r2              ;309
0001a8  e0ed              B        |L5.902|
                  |L5.426|
0001aa  1c71              ADDS     r1,r6,#1              ;310
0001ac  2000              MOVS     r0,#0                 ;310
0001ae  f7fffffe          BL       __aeabi_uwrite4
0001b2  e067              B        |L5.644|
                  |L5.436|
0001b4  79e8              LDRB     r0,[r5,#7]            ;342  ; subDome
0001b6  2800              CMP      r0,#0                 ;342
0001b8  d000              BEQ      |L5.444|
0001ba  e729              B        |L5.16|
                  |L5.444|
0001bc  7828              LDRB     r0,[r5,#0]            ;349  ; subDome
0001be  0900              LSRS     r0,r0,#4              ;349
0001c0  f7fffffe          BL       app_dome_subDome_pro
0001c4  e724              B        |L5.16|
                  |L5.454|
0001c6  4871              LDR      r0,|L5.908|
0001c8  7800              LDRB     r0,[r0,#0]            ;357  ; subDome_Assist
0001ca  2800              CMP      r0,#0                 ;357
0001cc  486f              LDR      r0,|L5.908|
0001ce  d05f              BEQ      |L5.656|
0001d0  1c40              ADDS     r0,r0,#1              ;357
0001d2  f7fffffe          BL       __aeabi_uread4
0001d6  2800              CMP      r0,#0                 ;360
0001d8  d004              BEQ      |L5.484|
0001da  496c              LDR      r1,|L5.908|
0001dc  1e40              SUBS     r0,r0,#1              ;361
                  |L5.478|
0001de  1c49              ADDS     r1,r1,#1              ;361
0001e0  f7fffffe          BL       __aeabi_uwrite4
                  |L5.484|
0001e4  4869              LDR      r0,|L5.908|
0001e6  1c40              ADDS     r0,r0,#1              ;365
0001e8  f7fffffe          BL       __aeabi_uread4
0001ec  9903              LDR      r1,[sp,#0xc]          ;365
0001ee  9001              STR      r0,[sp,#4]            ;365
0001f0  4348              MULS     r0,r1,r0              ;365
0001f2  0201              LSLS     r1,r0,#8              ;365
0001f4  1a08              SUBS     r0,r1,r0              ;365
0001f6  9900              LDR      r1,[sp,#0]            ;365
0001f8  f7fffffe          BL       __aeabi_uidivmod
0001fc  4601              MOV      r1,r0                 ;365
0001fe  4630              MOV      r0,r6                 ;365
000200  4348              MULS     r0,r1,r0              ;366
000202  2164              MOVS     r1,#0x64              ;366
000204  f7fffffe          BL       __aeabi_uidivmod
000208  4960              LDR      r1,|L5.908|
00020a  b280              UXTH     r0,r0                 ;367
00020c  1d89              ADDS     r1,r1,#6              ;367
00020e  9003              STR      r0,[sp,#0xc]          ;367
000210  8048              STRH     r0,[r1,#2]            ;367
000212  9902              LDR      r1,[sp,#8]            ;369
000214  9801              LDR      r0,[sp,#4]            ;369
000216  4348              MULS     r0,r1,r0              ;369
000218  0201              LSLS     r1,r0,#8              ;369
00021a  1a08              SUBS     r0,r1,r0              ;369
00021c  9900              LDR      r1,[sp,#0]            ;369
00021e  f7fffffe          BL       __aeabi_uidivmod
000222  4370              MULS     r0,r6,r0              ;370
000224  2164              MOVS     r1,#0x64              ;370
000226  f7fffffe          BL       __aeabi_uidivmod
00022a  4958              LDR      r1,|L5.908|
00022c  b280              UXTH     r0,r0                 ;371
00022e  1d89              ADDS     r1,r1,#6              ;371
000230  9002              STR      r0,[sp,#8]            ;371
000232  8088              STRH     r0,[r1,#4]            ;371
000234  9801              LDR      r0,[sp,#4]            ;373
000236  4378              MULS     r0,r7,r0              ;373
000238  0201              LSLS     r1,r0,#8              ;373
00023a  1a08              SUBS     r0,r1,r0              ;373
00023c  9900              LDR      r1,[sp,#0]            ;373
00023e  f7fffffe          BL       __aeabi_uidivmod
000242  4370              MULS     r0,r6,r0              ;374
000244  2164              MOVS     r1,#0x64              ;374
000246  f7fffffe          BL       __aeabi_uidivmod
00024a  4950              LDR      r1,|L5.908|
00024c  b282              UXTH     r2,r0                 ;375
00024e  3908              SUBS     r1,r1,#8              ;374
000250  6048              STR      r0,[r1,#4]            ;375  ; tmp
000252  4608              MOV      r0,r1                 ;375
000254  300e              ADDS     r0,r0,#0xe            ;375
000256  80c2              STRH     r2,[r0,#6]            ;375
000258  9902              LDR      r1,[sp,#8]            ;376
00025a  9803              LDR      r0,[sp,#0xc]          ;376
00025c  f7fffffe          BL       Light_RGB_set
000260  484a              LDR      r0,|L5.908|
000262  1c40              ADDS     r0,r0,#1              ;379
000264  f7fffffe          BL       __aeabi_uread4
000268  7a61              LDRB     r1,[r4,#9]            ;379  ; subDome
00026a  7a22              LDRB     r2,[r4,#8]            ;379  ; subDome
00026c  0209              LSLS     r1,r1,#8              ;379
00026e  4311              ORRS     r1,r1,r2              ;379
000270  4288              CMP      r0,r1                 ;379
000272  d201              BCS      |L5.632|
000274  2800              CMP      r0,#0                 ;380
000276  d19d              BNE      |L5.436|
                  |L5.632|
000278  4844              LDR      r0,|L5.908|
00027a  7801              LDRB     r1,[r0,#0]            ;381  ; subDome_Assist
00027c  2900              CMP      r1,#0                 ;381
00027e  d00d              BEQ      |L5.668|
000280  2100              MOVS     r1,#0                 ;384
000282  7001              STRB     r1,[r0,#0]            ;384
                  |L5.644|
000284  79e8              LDRB     r0,[r5,#7]            ;434  ; subDome
000286  2800              CMP      r0,#0                 ;434
000288  d098              BEQ      |L5.444|
00028a  1e40              SUBS     r0,r0,#1              ;434
00028c  71e8              STRB     r0,[r5,#7]            ;435
00028e  e791              B        |L5.436|
                  |L5.656|
000290  1c40              ADDS     r0,r0,#1              ;435
000292  f7fffffe          BL       __aeabi_uread4
000296  493d              LDR      r1,|L5.908|
000298  1c40              ADDS     r0,r0,#1              ;358
00029a  e7a0              B        |L5.478|
                  |L5.668|
00029c  2101              MOVS     r1,#1                 ;382
00029e  7001              STRB     r1,[r0,#0]            ;382
                  |L5.672|
0002a0  e788              B        |L5.436|
                  |L5.674|
0002a2  9803              LDR      r0,[sp,#0xc]          ;405
0002a4  4370              MULS     r0,r6,r0              ;405
0002a6  0201              LSLS     r1,r0,#8              ;405
0002a8  1a08              SUBS     r0,r1,r0              ;405
0002aa  2164              MOVS     r1,#0x64              ;405
0002ac  f7fffffe          BL       __aeabi_uidivmod
0002b0  4936              LDR      r1,|L5.908|
0002b2  b280              UXTH     r0,r0                 ;406
0002b4  1d89              ADDS     r1,r1,#6              ;406
0002b6  9001              STR      r0,[sp,#4]            ;406
0002b8  8048              STRH     r0,[r1,#2]            ;406
0002ba  9802              LDR      r0,[sp,#8]            ;408
0002bc  4370              MULS     r0,r6,r0              ;408
0002be  0201              LSLS     r1,r0,#8              ;408
0002c0  1a08              SUBS     r0,r1,r0              ;408
0002c2  2164              MOVS     r1,#0x64              ;408
0002c4  f7fffffe          BL       __aeabi_uidivmod
0002c8  4930              LDR      r1,|L5.908|
0002ca  b280              UXTH     r0,r0                 ;409
0002cc  1d89              ADDS     r1,r1,#6              ;409
0002ce  9000              STR      r0,[sp,#0]            ;409
0002d0  8088              STRH     r0,[r1,#4]            ;409
0002d2  4377              MULS     r7,r6,r7              ;411
0002d4  0238              LSLS     r0,r7,#8              ;411
0002d6  1bc0              SUBS     r0,r0,r7              ;411
0002d8  2164              MOVS     r1,#0x64              ;411
0002da  f7fffffe          BL       __aeabi_uidivmod
0002de  492b              LDR      r1,|L5.908|
0002e0  b282              UXTH     r2,r0                 ;412
0002e2  3908              SUBS     r1,r1,#8              ;411
0002e4  6048              STR      r0,[r1,#4]            ;412  ; tmp
0002e6  4608              MOV      r0,r1                 ;412
0002e8  300e              ADDS     r0,r0,#0xe            ;412
0002ea  80c2              STRH     r2,[r0,#6]            ;412
0002ec  9900              LDR      r1,[sp,#0]            ;413
0002ee  9801              LDR      r0,[sp,#4]            ;413
0002f0  f7fffffe          BL       Light_RGB_set
                  |L5.756|
0002f4  7a60              LDRB     r0,[r4,#9]            ;416  ; subDome
0002f6  4f25              LDR      r7,|L5.908|
0002f8  0206              LSLS     r6,r0,#8              ;416
0002fa  7a21              LDRB     r1,[r4,#8]            ;416  ; subDome
0002fc  3f08              SUBS     r7,r7,#8              ;416
0002fe  430e              ORRS     r6,r6,r1              ;416
000300  4638              MOV      r0,r7                 ;417
000302  3009              ADDS     r0,r0,#9              ;417
000304  607e              STR      r6,[r7,#4]            ;417  ; tmp
000306  f7fffffe          BL       __aeabi_uread4
00030a  42b0              CMP      r0,r6                 ;417
00030c  d128              BNE      |L5.864|
00030e  7928              LDRB     r0,[r5,#4]            ;418  ; subDome
000310  7a2e              LDRB     r6,[r5,#8]            ;418  ; subDome
000312  4370              MULS     r0,r6,r0              ;418
000314  0201              LSLS     r1,r0,#8              ;418
000316  1a08              SUBS     r0,r1,r0              ;418
000318  2164              MOVS     r1,#0x64              ;418
00031a  f7fffffe          BL       __aeabi_uidivmod
00031e  b280              UXTH     r0,r0                 ;419
000320  4639              MOV      r1,r7                 ;419
000322  310e              ADDS     r1,r1,#0xe            ;419
000324  9001              STR      r0,[sp,#4]            ;419
000326  8048              STRH     r0,[r1,#2]            ;419
000328  7968              LDRB     r0,[r5,#5]            ;421  ; subDome
00032a  4370              MULS     r0,r6,r0              ;421
00032c  0201              LSLS     r1,r0,#8              ;421
00032e  1a08              SUBS     r0,r1,r0              ;421
000330  2164              MOVS     r1,#0x64              ;421
000332  f7fffffe          BL       __aeabi_uidivmod
000336  b280              UXTH     r0,r0                 ;422
000338  4639              MOV      r1,r7                 ;422
00033a  310e              ADDS     r1,r1,#0xe            ;422
00033c  9000              STR      r0,[sp,#0]            ;422
00033e  8088              STRH     r0,[r1,#4]            ;422
000340  79a8              LDRB     r0,[r5,#6]            ;424  ; subDome
000342  4370              MULS     r0,r6,r0              ;424
000344  0201              LSLS     r1,r0,#8              ;424
000346  1a08              SUBS     r0,r1,r0              ;424
000348  2164              MOVS     r1,#0x64              ;424
00034a  f7fffffe          BL       __aeabi_uidivmod
00034e  b282              UXTH     r2,r0                 ;425
000350  6078              STR      r0,[r7,#4]            ;425  ; tmp
000352  4638              MOV      r0,r7                 ;425
000354  300e              ADDS     r0,r0,#0xe            ;425
000356  80c2              STRH     r2,[r0,#6]            ;425
000358  9900              LDR      r1,[sp,#0]            ;426
00035a  9801              LDR      r0,[sp,#4]            ;426
00035c  f7fffffe          BL       Light_RGB_set
                  |L5.864|
000360  4e0a              LDR      r6,|L5.908|
000362  1c70              ADDS     r0,r6,#1              ;429
000364  f7fffffe          BL       __aeabi_uread4
000368  1c71              ADDS     r1,r6,#1              ;429
00036a  1c40              ADDS     r0,r0,#1              ;429
00036c  f7fffffe          BL       __aeabi_uwrite4
000370  7a61              LDRB     r1,[r4,#9]            ;431  ; subDome
000372  7a23              LDRB     r3,[r4,#8]            ;431  ; subDome
000374  020a              LSLS     r2,r1,#8              ;431
000376  9904              LDR      r1,[sp,#0x10]         ;431
000378  431a              ORRS     r2,r2,r3              ;431
00037a  7a4b              LDRB     r3,[r1,#9]            ;431  ; subDome
00037c  7a0c              LDRB     r4,[r1,#8]            ;431  ; subDome
00037e  0219              LSLS     r1,r3,#8              ;431
000380  4321              ORRS     r1,r1,r4              ;431
000382  1851              ADDS     r1,r2,r1              ;431
000384  6079              STR      r1,[r7,#4]            ;431  ; tmp
                  |L5.902|
000386  4288              CMP      r0,r1                 ;432
000388  d38a              BCC      |L5.672|
00038a  e70e              B        |L5.426|
                          ENDP

                  |L5.908|
                          DCD      ||.data||+0x8
                  |L5.912|
                          DCD      ||.bss||

                          AREA ||i.app_dome_next||, CODE, READONLY, ALIGN=2

                  app_dome_next PROC
;;;78     }
;;;79     void app_dome_next(void) {
000000  b510              PUSH     {r4,lr}
;;;80     	domePro.currentDomeIndex++;
000002  4907              LDR      r1,|L6.32|
000004  7808              LDRB     r0,[r1,#0]  ; domePro
000006  1c40              ADDS     r0,r0,#1
000008  b2c0              UXTB     r0,r0
00000a  7008              STRB     r0,[r1,#0]
;;;81     	if (domePro.currentDomeIndex
00000c  282c              CMP      r0,#0x2c
00000e  d301              BCC      |L6.20|
;;;82     			>= ((FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T))) {
;;;83     		domePro.currentDomeIndex = 0;
000010  2000              MOVS     r0,#0
000012  7008              STRB     r0,[r1,#0]
                  |L6.20|
;;;84     	}
;;;85     
;;;86     	app_dome_start(domePro.currentDomeIndex, 1);
000014  b2c0              UXTB     r0,r0
000016  2101              MOVS     r1,#1
000018  f7fffffe          BL       app_dome_start
;;;87     }
00001c  bd10              POP      {r4,pc}
;;;88     
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      ||.data||+0x1

                          AREA ||i.app_dome_previous||, CODE, READONLY, ALIGN=2

                  app_dome_previous PROC
;;;69     
;;;70     void app_dome_previous(void) {
000000  b510              PUSH     {r4,lr}
;;;71     	if (domePro.currentDomeIndex) {
000002  4906              LDR      r1,|L7.28|
000004  7808              LDRB     r0,[r1,#0]  ; domePro
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L7.14|
00000a  1e40              SUBS     r0,r0,#1              ;70
;;;72     		domePro.currentDomeIndex--;
00000c  e000              B        |L7.16|
                  |L7.14|
;;;73     	} else {
;;;74     		domePro.currentDomeIndex = (FMC_APROM_END - DOME_START_ADDR)
00000e  202b              MOVS     r0,#0x2b
                  |L7.16|
000010  7008              STRB     r0,[r1,#0]
;;;75     				/ sizeof(DOME_DEFAULT_T) - 1;
;;;76     	}
;;;77     	app_dome_start(domePro.currentDomeIndex, 2);
000012  b2c0              UXTB     r0,r0
000014  2102              MOVS     r1,#2
000016  f7fffffe          BL       app_dome_start
;;;78     }
00001a  bd10              POP      {r4,pc}
;;;79     void app_dome_next(void) {
                          ENDP

                  |L7.28|
                          DCD      ||.data||+0x1

                          AREA ||i.app_dome_rgb||, CODE, READONLY, ALIGN=2

                  app_dome_rgb PROC
;;;219    
;;;220    void app_dome_rgb(uint8_t r, uint8_t g, uint8_t b) {
000000  b570              PUSH     {r4-r6,lr}
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  4606              MOV      r6,r0
;;;221    	app_dome_stop_current();
000008  f7fffffe          BL       app_dome_stop_current
;;;222    	dome_running_param.color.R = r << 8;
00000c  4b04              LDR      r3,|L8.32|
00000e  0230              LSLS     r0,r6,#8
000010  8058              STRH     r0,[r3,#2]
;;;223    	dome_running_param.color.G = g << 8;
000012  0229              LSLS     r1,r5,#8
000014  8099              STRH     r1,[r3,#4]
;;;224    	dome_running_param.color.B = b << 8;
000016  0222              LSLS     r2,r4,#8
000018  80da              STRH     r2,[r3,#6]
;;;225    #if 1
;;;226    	Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
00001a  f7fffffe          BL       Light_RGB_set
;;;227    			dome_running_param.color.B);
;;;228    #else
;;;229    	Light_RGB_set(0xFFFF, 0xFFFF, 0xFFFF);
;;;230    #endif
;;;231    }
00001e  bd70              POP      {r4-r6,pc}
;;;232    
                          ENDP

                  |L8.32|
                          DCD      ||.data||+0xe

                          AREA ||i.app_dome_single_cycle||, CODE, READONLY, ALIGN=2

                  app_dome_single_cycle PROC
;;;108    }
;;;109    void app_dome_single_cycle(uint8_t subIndex) {
000000  b510              PUSH     {r4,lr}
;;;110    	if ((dome_blink.header.repeat_number & 0x0F) == (subIndex + 1)) {
000002  490d              LDR      r1,|L9.56|
000004  7a4a              LDRB     r2,[r1,#9]  ; dome_blink
000006  0713              LSLS     r3,r2,#28
000008  0f1b              LSRS     r3,r3,#28
00000a  1c42              ADDS     r2,r0,#1
00000c  4293              CMP      r3,r2
00000e  d104              BNE      |L9.26|
;;;111    		subIndex = 0;
;;;112    		memcpy((uint8_t*) &subDome, (uint8_t*) &dome_blink.subdome[subIndex],
000010  4608              MOV      r0,r1
000012  220d              MOVS     r2,#0xd
000014  3817              SUBS     r0,r0,#0x17
000016  310a              ADDS     r1,r1,#0xa
000018  e005              B        |L9.38|
                  |L9.26|
;;;113    				sizeof(subDome));
;;;114    	} else {
;;;115    		memcpy((uint8_t*) &subDome,
00001a  220d              MOVS     r2,#0xd
00001c  4350              MULS     r0,r2,r0
00001e  1841              ADDS     r1,r0,r1
000020  4805              LDR      r0,|L9.56|
000022  3117              ADDS     r1,r1,#0x17
000024  3817              SUBS     r0,r0,#0x17
                  |L9.38|
000026  f7fffffe          BL       __aeabi_memcpy
;;;116    				(uint8_t*) &dome_blink.subdome[subIndex + 1], sizeof(subDome));
;;;117    	}
;;;118    	memcpy((uint8_t*) &domeHeader, (uint8_t*) &dome_blink.header,
00002a  4903              LDR      r1,|L9.56|
00002c  220a              MOVS     r2,#0xa
00002e  1a88              SUBS     r0,r1,r2
000030  f7fffffe          BL       __aeabi_memcpy
;;;119    			sizeof(domeHeader));
;;;120    }
000034  bd10              POP      {r4,pc}
;;;121    
                          ENDP

000036  0000              DCW      0x0000
                  |L9.56|
                          DCD      ||.bss||+0x17

                          AREA ||i.app_dome_start||, CODE, READONLY, ALIGN=2

                  app_dome_start PROC
;;;124     */
;;;125    void app_dome_start(uint8_t domeIndex, uint8_t dir) {
000000  b5f8              PUSH     {r3-r7,lr}
;;;126    	subDome_Assist.switch_flag = 0;
000002  4e25              LDR      r6,|L10.152|
000004  2700              MOVS     r7,#0
000006  460d              MOV      r5,r1                 ;125
000008  4604              MOV      r4,r0                 ;125
00000a  7037              STRB     r7,[r6,#0]
;;;127    	subDome_Assist.msCnt = 0;
00000c  1c71              ADDS     r1,r6,#1
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       __aeabi_uwrite4
;;;128    	subDome_Assist.stopTime = 0;
;;;129    
;;;130    //	app_dome_single_cycle(domeIndex);
;;;131    	if (domeIndex
;;;132    			> ((FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T) - 1)) {
;;;133    		domePro.currentDomeIndex = (FMC_APROM_END - DOME_START_ADDR)
000014  1ff0              SUBS     r0,r6,#7
000016  7177              STRB     r7,[r6,#5]            ;128
000018  2c2b              CMP      r4,#0x2b              ;131
00001a  d903              BLS      |L10.36|
00001c  212b              MOVS     r1,#0x2b
00001e  7001              STRB     r1,[r0,#0]
;;;134    				/ sizeof(DOME_DEFAULT_T) - 1;
;;;135    		domeIndex = (FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T)
000020  460c              MOV      r4,r1
000022  e000              B        |L10.38|
                  |L10.36|
;;;136    				- 1;
;;;137    	} else {
;;;138    		domePro.currentDomeIndex = domeIndex;
000024  7004              STRB     r4,[r0,#0]
                  |L10.38|
;;;139    	}
;;;140    	if (dir == 0) {
;;;141    //		app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
;;;142    		if (*((uint8_t *) &dome_blink) == 0xFF) {
000026  481d              LDR      r0,|L10.156|
000028  2d00              CMP      r5,#0                 ;140
00002a  7802              LDRB     r2,[r0,#0]
00002c  d004              BEQ      |L10.56|
;;;143    			Light_RGB_set(0, 0, 0);
;;;144    		}
;;;145    	} else if (dir == 1) {
00002e  2d01              CMP      r5,#1
000030  d005              BEQ      |L10.62|
;;;146    		uint8_t i = 0;
;;;147    		for (i = 0;
;;;148    				i < ((FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T));
;;;149    				i++) {
;;;150    //			app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
;;;151    			if (*((uint8_t *) &dome_blink) == 0xFF) {
;;;152    				if (domeIndex == 0) {
;;;153    					Light_RGB_set(0, 0, 0);
;;;154    					break;
;;;155    				}
;;;156    				domeIndex++;
;;;157    				if (domeIndex
;;;158    						>= ((FMC_APROM_END - DOME_START_ADDR)
;;;159    								/ sizeof(DOME_DEFAULT_T))) {
;;;160    					domeIndex = 0;
;;;161    //					break;
;;;162    				}
;;;163    			} else {
;;;164    				break;
;;;165    			}
;;;166    		}
;;;167    	} else if (dir == 2) {
000032  2d02              CMP      r5,#2
000034  d012              BEQ      |L10.92|
000036  e022              B        |L10.126|
                  |L10.56|
000038  2aff              CMP      r2,#0xff              ;142
00003a  d01b              BEQ      |L10.116|
00003c  e01f              B        |L10.126|
                  |L10.62|
00003e  2000              MOVS     r0,#0                 ;146
                  |L10.64|
000040  2aff              CMP      r2,#0xff              ;151
000042  d11c              BNE      |L10.126|
000044  2c00              CMP      r4,#0                 ;152
000046  d015              BEQ      |L10.116|
000048  1c64              ADDS     r4,r4,#1              ;152
00004a  b2e4              UXTB     r4,r4                 ;156
00004c  2c2c              CMP      r4,#0x2c              ;157
00004e  d300              BCC      |L10.82|
000050  2400              MOVS     r4,#0                 ;160
                  |L10.82|
000052  1c40              ADDS     r0,r0,#1              ;160
000054  b2c0              UXTB     r0,r0                 ;149
000056  282c              CMP      r0,#0x2c              ;148
000058  d3f2              BCC      |L10.64|
00005a  e010              B        |L10.126|
                  |L10.92|
;;;168    		uint8_t i = 0;
00005c  2000              MOVS     r0,#0
                  |L10.94|
;;;169    		for (i = 0;
;;;170    				i < ((FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T));
;;;171    				i++) {
;;;172    //			app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
;;;173    			if (*((uint8_t *) &dome_blink) == 0xFF) {
00005e  2aff              CMP      r2,#0xff
000060  d10d              BNE      |L10.126|
;;;174    				if (domeIndex) {
000062  2c00              CMP      r4,#0
000064  d006              BEQ      |L10.116|
000066  1e64              SUBS     r4,r4,#1
;;;175    					domeIndex--;
000068  1c40              ADDS     r0,r0,#1
00006a  b2c0              UXTB     r0,r0                 ;171
00006c  b2e4              UXTB     r4,r4
00006e  282c              CMP      r0,#0x2c              ;170
000070  d3f5              BCC      |L10.94|
000072  e004              B        |L10.126|
                  |L10.116|
;;;176    				} else {
;;;177    					Light_RGB_set(0, 0, 0);
000074  2200              MOVS     r2,#0
000076  4611              MOV      r1,r2
000078  4610              MOV      r0,r2
00007a  f7fffffe          BL       Light_RGB_set
                  |L10.126|
;;;178    					break;
;;;179    				}
;;;180    			} else {
;;;181    				break;
;;;182    			}
;;;183    		}
;;;184    	}
;;;185    //	domePro.currentDomeIndex = domeIndex;
;;;186    //	if (dome_blink.header.index == 0) {
;;;187    //		app_eeprom_get_dome_with_index(&dome_blink, 0);
;;;188    //		app_dome_stop_current();
;;;189    //	}
;;;190    
;;;191    	memcpy((uint8_t*) &subDome, (uint8_t*) &dome_blink.subdome[0],
00007e  4907              LDR      r1,|L10.156|
000080  220d              MOVS     r2,#0xd
000082  310a              ADDS     r1,r1,#0xa
000084  4608              MOV      r0,r1
000086  3821              SUBS     r0,r0,#0x21
000088  f7fffffe          BL       __aeabi_memcpy
;;;192    			sizeof(subDome));
;;;193    
;;;194    	memcpy((uint8_t*) &domeHeader, (uint8_t*) &dome_blink.header,
00008c  4903              LDR      r1,|L10.156|
00008e  220a              MOVS     r2,#0xa
000090  1a88              SUBS     r0,r1,r2
000092  f7fffffe          BL       __aeabi_memcpy
;;;195    			sizeof(domeHeader));
;;;196    
;;;197    }
000096  bdf8              POP      {r3-r7,pc}
;;;198    static uint8_t cyc = 0;
                          ENDP

                  |L10.152|
                          DCD      ||.data||+0x8
                  |L10.156|
                          DCD      ||.bss||+0x17

                          AREA ||i.app_dome_start_current||, CODE, READONLY, ALIGN=2

                  app_dome_start_current PROC
;;;95     }
;;;96     void app_dome_start_current(void) {
000000  b510              PUSH     {r4,lr}
;;;97     	color_blink_index = COLOR_BLINK_NUMBER - 1;
000002  4904              LDR      r1,|L11.20|
000004  2009              MOVS     r0,#9
000006  7008              STRB     r0,[r1,#0]
;;;98     
;;;99     //	g_tWork.status.bits.blinkEnable = 1;
;;;100    	app_dome_start(domePro.currentDomeIndex, 0);
000008  1c48              ADDS     r0,r1,#1
00000a  7800              LDRB     r0,[r0,#0]  ; domePro
00000c  2100              MOVS     r1,#0
00000e  f7fffffe          BL       app_dome_start
;;;101    }
000012  bd10              POP      {r4,pc}
;;;102    void app_dome_stop_current(void) {
                          ENDP

                  |L11.20|
                          DCD      ||.data||

                          AREA ||i.app_dome_stop_current||, CODE, READONLY, ALIGN=2

                  app_dome_stop_current PROC
;;;101    }
;;;102    void app_dome_stop_current(void) {
000000  b510              PUSH     {r4,lr}
;;;103    //	g_tWork.status.bits.blinkEnable = 0;
;;;104    
;;;105    	subDome.repeate = 0;
000002  2000              MOVS     r0,#0
000004  4904              LDR      r1,|L12.24|
;;;106    	subDome.offtime = 0;
;;;107    	Light_RGB_set(0, 0, 0);
000006  4602              MOV      r2,r0
000008  71c8              STRB     r0,[r1,#7]            ;105
00000a  72c8              STRB     r0,[r1,#0xb]          ;106
00000c  7308              STRB     r0,[r1,#0xc]          ;106
00000e  4601              MOV      r1,r0
000010  f7fffffe          BL       Light_RGB_set
;;;108    }
000014  bd10              POP      {r4,pc}
;;;109    void app_dome_single_cycle(uint8_t subIndex) {
                          ENDP

000016  0000              DCW      0x0000
                  |L12.24|
                          DCD      ||.bss||

                          AREA ||i.app_dome_subDome_pro||, CODE, READONLY, ALIGN=2

                  app_dome_subDome_pro PROC
;;;198    static uint8_t cyc = 0;
;;;199    static void app_dome_subDome_pro(uint8_t subIndex) {
000000  b510              PUSH     {r4,lr}
;;;200    
;;;201    	subDome_Assist.switch_flag = 0;
000002  4c04              LDR      r4,|L13.20|
000004  2000              MOVS     r0,#0
000006  7020              STRB     r0,[r4,#0]
;;;202    	subDome_Assist.msCnt = 0;
000008  1c61              ADDS     r1,r4,#1
00000a  f7fffffe          BL       __aeabi_uwrite4
;;;203    	subDome_Assist.stopTime = 50;
00000e  2032              MOVS     r0,#0x32
000010  7160              STRB     r0,[r4,#5]
;;;204    #if 0
;;;205    	if (g_tWork.status.bits.DEMO) {
;;;206    		cyc++;
;;;207    		if (cyc <= 4) {
;;;208    			app_dome_single_cycle(subIndex);
;;;209    		} else {
;;;210    			cyc = 0;
;;;211    			app_dome_next();
;;;212    		}
;;;213    	} else {
;;;214    		cyc = 0;
;;;215    		app_dome_single_cycle(subIndex);
;;;216    	}
;;;217    #endif
;;;218    }
000012  bd10              POP      {r4,pc}
;;;219    
                          ENDP

                  |L13.20|
                          DCD      ||.data||+0x8

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  subDome
                          %        13
                  domeHeader
                          %        10
                  dome_blink
                          %        114

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  color_blink_buffer
000000  ffffff00          DCB      0xff,0xff,0xff,0x00
000004  ff000000          DCB      0xff,0x00,0x00,0x00
000008  ffff0000          DCB      0xff,0xff,0x00,0x00
00000c  00ffffff          DCB      0x00,0xff,0xff,0xff
000010  00ffffff          DCB      0x00,0xff,0xff,0xff
000014  0000ff80          DCB      0x00,0x00,0xff,0x80
000018  0080ffff          DCB      0x00,0x80,0xff,0xff
00001c  8000              DCB      0x80,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  color_blink_index
000000  00                DCB      0x00
                  domePro
000001  000000            DCB      0x00,0x00,0x00
                  tmp
                          DCD      0x00000000
                  subDome_Assist
                          DCD      0x00000000
00000c  0000              DCB      0x00,0x00
                  dome_running_param
00000e  0000              DCB      0x00,0x00
                          DCD      0x00000000
000014  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\App\\src\\app_dome.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_app_dome_c_8d6f043f____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_app_dome_c_8d6f043f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_app_dome_c_8d6f043f____REVSH|
#line 402
|__asm___10_app_dome_c_8d6f043f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
