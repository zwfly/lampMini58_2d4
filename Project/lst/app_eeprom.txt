; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\app_eeprom.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\app_eeprom.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini58Series\Include -I..\Bsp -I..\Bsp\inc -I..\utils\inc -I..\App\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 --omf_browse=.\obj\app_eeprom.crf ..\App\src\app_eeprom.c]
                          THUMB

                          AREA ||i.app_eeprom_100ms_pro||, CODE, READONLY, ALIGN=1

                  app_eeprom_100ms_pro PROC
;;;53     }
;;;54     void app_eeprom_100ms_pro(void) {
000000  4770              BX       lr
;;;55     
;;;56     }
;;;57     
                          ENDP


                          AREA ||i.app_eeprom_Init||, CODE, READONLY, ALIGN=1

                  app_eeprom_Init PROC
;;;9      
;;;10     void app_eeprom_Init(void) {
000000  4770              BX       lr
;;;11     
;;;12     }
;;;13     
                          ENDP


                          AREA ||i.app_eeprom_erase||, CODE, READONLY, ALIGN=1

                  app_eeprom_erase PROC
;;;40     
;;;41     void app_eeprom_erase(uint32_t addr) {
000000  211b              MOVS     r1,#0x1b
000002  b510              PUSH     {r4,lr}
;;;42     	bsp_eeprom_erase(DOME_START_ADDR + addr);
000004  0289              LSLS     r1,r1,#10
000006  1840              ADDS     r0,r0,r1
000008  f7fffffe          BL       bsp_eeprom_erase
;;;43     }
00000c  bd10              POP      {r4,pc}
;;;44     void app_eeprom_write_int(uint32_t addr, uint32_t d) {
                          ENDP


                          AREA ||i.app_eeprom_get_dome_with_index||, CODE, READONLY, ALIGN=1

                  app_eeprom_get_dome_with_index PROC
;;;13     
;;;14     void app_eeprom_get_dome_with_index(DOME_DEFAULT_T *dd, uint8_t index) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4606              MOV      r6,r0
;;;15     
;;;16     	if (index >= ((FMC_APROM_END - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T))) {
000004  292c              CMP      r1,#0x2c
000006  d300              BCC      |L4.10|
;;;17     		index = 0;
000008  2100              MOVS     r1,#0
                  |L4.10|
;;;18     	}
;;;19     	uint8_t i = 0;
;;;20     	uint8_t *pt = (uint8_t *) dd;
;;;21     	uint8_t n = sizeof(DOME_DEFAULT_T);
;;;22     	uint8_t minSpaceBytes = n;
;;;23     	if (minSpaceBytes % 4) {
;;;24     		minSpaceBytes++;
00000a  2273              MOVS     r2,#0x73
;;;25     	}
;;;26     
;;;27     	for (i = 0; i < (n / 4); i++) {
;;;28     		uint32_t dt = app_eeprom_read_int(index * minSpaceBytes + i * 4);
00000c  4351              MULS     r1,r2,r1
00000e  2400              MOVS     r4,#0                 ;19
000010  2072              MOVS     r0,#0x72              ;21
000012  0887              LSRS     r7,r0,#2              ;27
000014  9100              STR      r1,[sp,#0]            ;23
000016  e011              B        |L4.60|
                  |L4.24|
000018  9800              LDR      r0,[sp,#0]
00001a  00a5              LSLS     r5,r4,#2
00001c  1940              ADDS     r0,r0,r5
00001e  f7fffffe          BL       app_eeprom_read_int
000022  4601              MOV      r1,r0
;;;29     
;;;30     		uint8_t j = 0;
;;;31     		for (j = 0; j < 4; j++) {
;;;32     			*(pt + i * 4 + j) = (dt >> (i * 8)) & 0xFF;
000024  00e2              LSLS     r2,r4,#3
000026  40d1              LSRS     r1,r1,r2
000028  2000              MOVS     r0,#0                 ;30
00002a  b2c9              UXTB     r1,r1
00002c  19aa              ADDS     r2,r5,r6
                  |L4.46|
00002e  5411              STRB     r1,[r2,r0]
000030  1c40              ADDS     r0,r0,#1
000032  b2c0              UXTB     r0,r0                 ;31
000034  2804              CMP      r0,#4                 ;31
000036  d3fa              BCC      |L4.46|
000038  1c64              ADDS     r4,r4,#1              ;31
00003a  b2e4              UXTB     r4,r4                 ;27
                  |L4.60|
00003c  42a7              CMP      r7,r4                 ;27
00003e  d8eb              BHI      |L4.24|
;;;33     		}
;;;34     	}
;;;35     }
000040  bdf8              POP      {r3-r7,pc}
;;;36     
                          ENDP


                          AREA ||i.app_eeprom_read_int||, CODE, READONLY, ALIGN=1

                  app_eeprom_read_int PROC
;;;46     }
;;;47     uint32_t app_eeprom_read_int(uint32_t addr) {
000000  211b              MOVS     r1,#0x1b
000002  b510              PUSH     {r4,lr}
;;;48     	return bsp_eeprom_read_int(DOME_START_ADDR + addr);
000004  0289              LSLS     r1,r1,#10
000006  1840              ADDS     r0,r0,r1
000008  f7fffffe          BL       bsp_eeprom_read_int
;;;49     }
00000c  bd10              POP      {r4,pc}
;;;50     void app_eeprom_write_buf(uint16_t addr, uint8_t *pt, uint8_t len) {
                          ENDP


                          AREA ||i.app_eeprom_save_dome_with_byte||, CODE, READONLY, ALIGN=1

                  app_eeprom_save_dome_with_byte PROC
;;;36     
;;;37     void app_eeprom_save_dome_with_byte(DOME_DEFAULT_T *dd, uint8_t index) {
000000  4770              BX       lr
;;;38     
;;;39     }
;;;40     
                          ENDP


                          AREA ||i.app_eeprom_write_buf||, CODE, READONLY, ALIGN=1

                  app_eeprom_write_buf PROC
;;;49     }
;;;50     void app_eeprom_write_buf(uint16_t addr, uint8_t *pt, uint8_t len) {
000000  4770              BX       lr
;;;51     //write_DATAFLASH_BUF(DOME_START_ADDR + addr, pt, len);
;;;52     
;;;53     }
;;;54     void app_eeprom_100ms_pro(void) {
                          ENDP


                          AREA ||i.app_eeprom_write_int||, CODE, READONLY, ALIGN=1

                  app_eeprom_write_int PROC
;;;43     }
;;;44     void app_eeprom_write_int(uint32_t addr, uint32_t d) {
000000  221b              MOVS     r2,#0x1b
000002  b510              PUSH     {r4,lr}
;;;45     	bsp_eeprom_write_int(DOME_START_ADDR + addr, d);
000004  0292              LSLS     r2,r2,#10
000006  1880              ADDS     r0,r0,r2
000008  f7fffffe          BL       bsp_eeprom_write_int
;;;46     }
00000c  bd10              POP      {r4,pc}
;;;47     uint32_t app_eeprom_read_int(uint32_t addr) {
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\App\\src\\app_eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_app_eeprom_c_0e2cdbe2____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_app_eeprom_c_0e2cdbe2____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_app_eeprom_c_0e2cdbe2____REVSH|
#line 402
|__asm___12_app_eeprom_c_0e2cdbe2____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
