; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\app_work.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\app_work.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini58Series\Include -I..\Bsp -I..\Bsp\inc -I..\utils\inc -I..\App\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 --omf_browse=.\obj\app_work.crf ..\App\src\app_work.c]
                          THUMB

                          AREA ||i.app_work_100ms_pro||, CODE, READONLY, ALIGN=1

                  app_work_100ms_pro PROC
;;;47     }
;;;48     void app_work_100ms_pro(void) {
000000  4770              BX       lr
;;;49     
;;;50     }
;;;51     
                          ENDP


                          AREA ||i.app_work_1s_pro||, CODE, READONLY, ALIGN=2

                  app_work_1s_pro PROC
;;;20     
;;;21     void app_work_1s_pro(void) {
000000  b5f0              PUSH     {r4-r7,lr}
;;;22     
;;;23     	if (g_tWork.status.bits.DOME) {
000002  4e1e              LDR      r6,|L2.124|
000004  b085              SUB      sp,sp,#0x14           ;21
000006  7930              LDRB     r0,[r6,#4]  ; g_tWork
000008  07c0              LSLS     r0,r0,#31
00000a  d034              BEQ      |L2.118|
;;;24     		uint8_t index = 0;
;;;25     		uint8_t buffer[16] = { 0 };
00000c  2500              MOVS     r5,#0
00000e  9500              STR      r5,[sp,#0]
000010  9501              STR      r5,[sp,#4]
000012  9502              STR      r5,[sp,#8]
;;;26     
;;;27     		index = 0;
;;;28     		buffer[index++] = LAMP2LCD_HEADER;
000014  21f8              MOVS     r1,#0xf8
000016  466c              MOV      r4,sp
000018  9503              STR      r5,[sp,#0xc]
00001a  7021              STRB     r1,[r4,#0]
;;;29     		buffer[index++] = 11;
00001c  210b              MOVS     r1,#0xb
00001e  7061              STRB     r1,[r4,#1]
;;;30     		buffer[index++] = LED_MODE_MSG_CMD;
000020  21e0              MOVS     r1,#0xe0
000022  70a1              STRB     r1,[r4,#2]
;;;31     		buffer[index++] = g_tWork.device_mode;  //蓝牙模块工作模式
000024  7831              LDRB     r1,[r6,#0]  ; g_tWork
000026  70e1              STRB     r1,[r4,#3]
000028  2701              MOVS     r7,#1                 ;28
;;;32     		app_dome_get_current_Name(buffer + index, 8);
00002a  2108              MOVS     r1,#8
00002c  a801              ADD      r0,sp,#4
00002e  f7fffffe          BL       app_dome_get_current_Name
;;;33     		index += 8;
;;;34     		if (g_tWork.status.bits.blinkEnable) {
000032  7930              LDRB     r0,[r6,#4]  ; g_tWork
000034  0701              LSLS     r1,r0,#28
;;;35     			led_mode_msg.status.bits.pp = 0;
000036  4812              LDR      r0,|L2.128|
000038  6801              LDR      r1,[r0,#0]            ;34  ; led_mode_msg
00003a  d501              BPL      |L2.64|
00003c  43b9              BICS     r1,r1,r7
00003e  e000              B        |L2.66|
                  |L2.64|
;;;36     		} else {
;;;37     			led_mode_msg.status.bits.pp = 1;
000040  4339              ORRS     r1,r1,r7
                  |L2.66|
;;;38     		}
;;;39     		buffer[index++] = led_mode_msg.status.allbits;
000042  6001              STR      r1,[r0,#0]  ; led_mode_msg
000044  7800              LDRB     r0,[r0,#0]  ; led_mode_msg
000046  4669              MOV      r1,sp
000048  7308              STRB     r0,[r1,#0xc]
;;;40     		for (i = 0; i < (buffer[1] + 1); i++) {
00004a  4b0d              LDR      r3,|L2.128|
00004c  210d              MOVS     r1,#0xd               ;39
00004e  1f1b              SUBS     r3,r3,#4
000050  701d              STRB     r5,[r3,#0]
000052  e006              B        |L2.98|
                  |L2.84|
;;;41     			buffer[index] += buffer[i + 1];
000054  18a5              ADDS     r5,r4,r2
000056  5c60              LDRB     r0,[r4,r1]
000058  786d              LDRB     r5,[r5,#1]
00005a  1940              ADDS     r0,r0,r5
00005c  5460              STRB     r0,[r4,r1]
00005e  1c52              ADDS     r2,r2,#1
000060  701a              STRB     r2,[r3,#0]            ;40
                  |L2.98|
000062  4668              MOV      r0,sp                 ;40
000064  7840              LDRB     r0,[r0,#1]            ;40
000066  781a              LDRB     r2,[r3,#0]            ;40  ; i
000068  1c40              ADDS     r0,r0,#1              ;40
00006a  4290              CMP      r0,r2                 ;40
00006c  d8f2              BHI      |L2.84|
;;;42     		}
;;;43     		index++;
;;;44     		app_2d4_send(buffer, index);
00006e  4668              MOV      r0,sp
000070  1c49              ADDS     r1,r1,#1
000072  f7fffffe          BL       app_2d4_send
                  |L2.118|
;;;45     	}
;;;46     
;;;47     }
000076  b005              ADD      sp,sp,#0x14
000078  bdf0              POP      {r4-r7,pc}
;;;48     void app_work_100ms_pro(void) {
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      ||.data||+0x8
                  |L2.128|
                          DCD      ||.data||+0x4

                          AREA ||i.app_work_Init||, CODE, READONLY, ALIGN=2

                  app_work_Init PROC
;;;14     
;;;15     void app_work_Init(void) {
000000  4902              LDR      r1,|L3.12|
;;;16     
;;;17     	memset((uint8_t *) &g_tWork, 0, sizeof(WORK_T));
000002  2000              MOVS     r0,#0
000004  6088              STR      r0,[r1,#8]  ; g_tWork
;;;18     	memset((uint8_t *) &led_mode_msg, 0, sizeof(LED_MODE_MSG_ST));
000006  60c8              STR      r0,[r1,#0xc]  ; g_tWork
000008  6048              STR      r0,[r1,#4]  ; led_mode_msg
;;;19     }
00000a  4770              BX       lr
;;;20     
                          ENDP

                  |L3.12|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  i
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  led_mode_msg
                          DCD      0x00000000
                  g_tWork
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\App\\src\\app_work.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_app_work_c_37eaa547____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_app_work_c_37eaa547____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_app_work_c_37eaa547____REVSH|
#line 402
|__asm___10_app_work_c_37eaa547____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
