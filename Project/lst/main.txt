; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini58Series\Include -I..\Bsp -I..\Bsp\inc -I..\utils\inc -I..\App\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 --omf_browse=.\obj\main.crf ..\App\src\main.c]
                          THUMB

                          AREA ||i.SYS_Init||, CODE, READONLY, ALIGN=2

                  SYS_Init PROC
;;;15     
;;;16     void SYS_Init(void) {
000000  b510              PUSH     {r4,lr}
000002  2059              MOVS     r0,#0x59
000004  4c0d              LDR      r4,|L1.60|
000006  2216              MOVS     r2,#0x16
000008  2188              MOVS     r1,#0x88
                  |L1.10|
00000a  6020              STR      r0,[r4,#0]
00000c  6022              STR      r2,[r4,#0]
00000e  6021              STR      r1,[r4,#0]
000010  6823              LDR      r3,[r4,#0]
000012  2b00              CMP      r3,#0
000014  d0f9              BEQ      |L1.10|
;;;17     	/* Unlock protected registers */
;;;18     	SYS_UnlockReg();
;;;19     #if 0
;;;20     	/* Set P5 multi-function pins for XTAL1 and XTAL2 */
;;;21     	SYS->P5_MFP &= ~(SYS_MFP_P50_Msk | SYS_MFP_P51_Msk);
;;;22     	SYS->P5_MFP |= (SYS_MFP_P50_XT1_IN | SYS_MFP_P51_XT1_OUT);
;;;23     
;;;24     	/*---------------------------------------------------------------------------------------------------------*/
;;;25     	/* Init System Clock                                                                                       */
;;;26     	/*---------------------------------------------------------------------------------------------------------*/
;;;27     
;;;28     	/* Enable external 12MHz XTAL, HIRC */
;;;29     	CLK->PWRCTL |= CLK_PWRCTL_XTL12M | CLK_PWRCTL_HIRCEN_Msk;
;;;30     
;;;31     	/* Waiting for clock ready */
;;;32     	CLK_WaitClockReady(CLK_STATUS_XTLSTB_Msk | CLK_STATUS_HIRCSTB_Msk);
;;;33     
;;;34     	/* Switch HCLK clock source to XTL */
;;;35     	CLK_SetHCLK(CLK_CLKSEL0_HCLKSEL_XTAL,CLK_CLKDIV_HCLK(1));
;;;36     
;;;37     	/* STCLK to XTL STCLK to XTL */
;;;38     	CLK_SetSysTickClockSrc(CLK_CLKSEL0_STCLKSEL_XTAL);
;;;39     #else
;;;40     
;;;41     	/* Enable HIRC clock (Internal RC 22.1184MHz) */
;;;42     	CLK_EnableXtalRC(CLK_PWRCTL_HIRCEN_Msk);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       CLK_EnableXtalRC
;;;43     
;;;44     	/* Wait for HIRC clock ready */
;;;45     	CLK_WaitClockReady(CLK_STATUS_HIRCSTB_Msk);
00001c  2010              MOVS     r0,#0x10
00001e  f7fffffe          BL       CLK_WaitClockReady
;;;46     
;;;47     	/* Select HCLK clock source as HIRC and and HCLK source divider as 1 */
;;;48     	CLK_SetHCLK(CLK_CLKSEL0_HCLKSEL_HIRC, CLK_CLKDIV_HCLK(1));
000022  2100              MOVS     r1,#0
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       CLK_SetHCLK
;;;49     
;;;50     	/* Set core clock as PLL_CLOCK from PLL */
;;;51     	CLK_SetCoreClock(PLL_CLOCK);
00002a  4805              LDR      r0,|L1.64|
00002c  f7fffffe          BL       CLK_SetCoreClock
;;;52     
;;;53     #endif
;;;54     
;;;55     	/* To update the variable SystemCoreClock */
;;;56     	SystemCoreClockUpdate();
000030  f7fffffe          BL       SystemCoreClockUpdate
000034  2000              MOVS     r0,#0
000036  6020              STR      r0,[r4,#0]
;;;57     
;;;58     	/* Lock protected registers */
;;;59     	SYS_LockReg();
;;;60     }
000038  bd10              POP      {r4,pc}
;;;61     
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x50000100
                  |L1.64|
                          DCD      0x02faf080

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;64     /*---------------------------------------------------------------------------------------------------------*/
;;;65     int main(void) {
000000  b508              PUSH     {r3,lr}
;;;66     	uint8_t ucKeyCode;
;;;67     //	int32_t i32Err;
;;;68     
;;;69     	/* Init System */
;;;70     	SYS_Init();
000002  f7fffffe          BL       SYS_Init
;;;71     
;;;72     	bsp_Init();
000006  f7fffffe          BL       bsp_Init
;;;73     
;;;74     #if 1
;;;75     	LITE_openlog("lamp");
00000a  a00c              ADR      r0,|L2.60|
00000c  f7fffffe          BL       LITE_openlog
;;;76     	LITE_set_loglevel(LOG_DEBUG_LEVEL);
000010  2005              MOVS     r0,#5
000012  f7fffffe          BL       LITE_set_loglevel
;;;77     #else
;;;78     	LITE_closelog();
;;;79     #endif
;;;80     
;;;81     	log_debug(" CPU @ %dHz\r\n", SystemCoreClock);
000016  480b              LDR      r0,|L2.68|
000018  a30b              ADR      r3,|L2.72|
00001a  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00001c  9000              STR      r0,[sp,#0]
00001e  2205              MOVS     r2,#5
000020  2151              MOVS     r1,#0x51
000022  480d              LDR      r0,|L2.88|
000024  f7fffffe          BL       LITE_syslog
;;;82     
;;;83     	printf("+-------------------------------------+ \r\n");
000028  a00c              ADR      r0,|L2.92|
00002a  f7fffffe          BL       __2printf
;;;84     	printf("+-------------------------------------+ \r\n");
00002e  a00b              ADR      r0,|L2.92|
000030  f7fffffe          BL       __2printf
                  |L2.52|
;;;85     
;;;86     	while (1) {
;;;87     
;;;88     		ucKeyCode = bsp_GetKey();
000034  f7fffffe          BL       bsp_GetKey
;;;89     		if (ucKeyCode != KEY_NONE) {
000038  e7fc              B        |L2.52|
;;;90     			switch (ucKeyCode) {
;;;91     			case KEY_UP_K1:   //
;;;92     				break;
;;;93     			case KEY_DOWN_K1: {
;;;94     
;;;95     
;;;96     			}
;;;97     				break;
;;;98     			case KEY_LONG_K1:
;;;99     				break;
;;;100    			case KEY_UP_K2:   //
;;;101    				break;
;;;102    			case KEY_DOWN_K2:
;;;103    
;;;104    //				Relay_toggle();
;;;105    				break;
;;;106    			case KEY_LONG_K2:
;;;107    				break;
;;;108    			}
;;;109    		}
;;;110    
;;;111    	}
;;;112    
;;;113    }
;;;114    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
00003c  6c616d70          DCB      "lamp",0
000040  00      
000041  00                DCB      0
000042  00                DCB      0
000043  00                DCB      0
                  |L2.68|
                          DCD      SystemCoreClock
                  |L2.72|
000048  20435055          DCB      " CPU @ %dHz\r\n",0
00004c  20402025
000050  64487a0d
000054  0a00    
000056  00                DCB      0
000057  00                DCB      0
                  |L2.88|
                          DCD      ||.constdata||
                  |L2.92|
00005c  2b2d2d2d          DCB      "+-------------------------------------+ \r\n",0
000060  2d2d2d2d
000064  2d2d2d2d
000068  2d2d2d2d
00006c  2d2d2d2d
000070  2d2d2d2d
000074  2d2d2d2d
000078  2d2d2d2d
00007c  2d2d2d2d
000080  2d2d2b20
000084  0d0a00  
000087  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  6d61696e          DCB      0x6d,0x61,0x69,0x6e
000004  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\App\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_SYS_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REVSH|
#line 402
|__asm___6_main_c_SYS_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
